{"componentChunkName":"component---src-templates-technology-tsx","path":"/technologies/docker","result":{"data":{"markdownRemark":{"id":"dd72e09d-36d3-57a0-a81d-726c95ba602a","html":"<p>I have used Docker as a pivotal development tool for years, including its satellite technologies (<code>docker-compose</code>, Kubernetes, etc). For countless projects, Docker plays a role in least an initial phase, enabling me to quickly stand up technologies and link them; it also serves as a perfect mechanism for repeatable deployments with carefully frozen system dependencies and settings. </p>\n<p>As for container orchestration, I have used Kubernetes both in production deployment (on GKE) and for local development or internal servers, relying on all major components of its infrastructure (ingresses, provisioned storage, etc) to coordinate <a href=\"/technologies/microservices\">microservice-driven</a> projects that often consist of various APIs, databases, and <a href=\"/technologies/rabbitmq\">task-running queues</a>. </p>","frontmatter":{"title":"Docker","tags":["microservices","kubernetes"],"competence":"advanced","parent":null}},"tags":{"nodes":[{"id":"802144d6-be1c-5e8d-a9b3-5cc1c645e074","fields":{"slug":"/technologies/kubernetes","tag":"kubernetes"},"frontmatter":{"title":"Kubernetes"}},{"id":"0c42cc39-d1e0-5c3a-b643-7b0473ecf678","fields":{"slug":"/technologies/microservices","tag":"microservices"},"frontmatter":{"title":"Microservices"}}]}},"pageContext":{"tags":["microservices","kubernetes"]}}}