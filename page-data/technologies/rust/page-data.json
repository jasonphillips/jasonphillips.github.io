{"componentChunkName":"component---src-templates-technology-tsx","path":"/technologies/rust","result":{"data":{"markdownRemark":{"id":"d4ca853c-81ba-5b63-a722-45cea24afa97","html":"<p>Rust has rapidly become my favorite development experience when low-level or highly efficient work needs to be done. I find its syntax elegant and its referential integrity a breeze to work with, since I’m forced to iron out any confusions or ambiguities about ownership in the development phase prior to compilation—and the excellent tooling makes that as smooth as possible. In the end, I also simply find the abstractions and appearance of the code to be somewhat beautiful, which turns out to be necessary if I’m going to be buried in low-level code for a project.</p>\n<p>I have mainly worked with rust in the context of building efficient code to deploy as <a href=\"/technologies/wasm\">web assembly</a>, when a task is memory or computationally expensive enough that javascript isn’t appropriate. One major Rust project on which I expended considerable effort is the construction of a pattern-matching engine for text tokens (in the context of <a href=\"/technologies/nlp\">NLP</a>), which I designed with hashmaps and smart iteration in order to achieve sufficient speed for embedding on the web, analyzing large texts against lengthy lists of grammatically expressed declarative rules. Because this project requires de-serializing the entire ruleset from an external file, deep JSON parsing into efficient rust structures also made up a sizeable portion of the work. In a related library, I reworked Wordnet data structures into a form serializable as a binary payload that can be ingested quickly once the Web Assembly module loads (streamed in as a <code>Uint8Array</code> buffer), and permits rapid traversal for the NLP task of stemming. </p>","frontmatter":{"title":"Rust","tags":["wasm","nlp","rules"],"competence":"advanced","parent":null}},"tags":{"nodes":[{"id":"83b27cdb-75f2-557a-a719-fb3943640d3d","fields":{"slug":"/technologies/nlp","tag":"nlp"},"frontmatter":{"title":"Natural Language Processing"}},{"id":"334aced6-fc24-59d1-8b39-10ea0b1355e2","fields":{"slug":"/technologies/rules","tag":"rules"},"frontmatter":{"title":"Rule Systems"}},{"id":"0aef1bb4-168f-52d6-9b45-57b0d7a094ed","fields":{"slug":"/technologies/wasm","tag":"wasm"},"frontmatter":{"title":"WebAssembly"}}]}},"pageContext":{"tags":["wasm","nlp","rules"]}}}