{"componentChunkName":"component---src-templates-technology-tsx","path":"/technologies/microservices","result":{"data":{"markdownRemark":{"id":"0c42cc39-d1e0-5c3a-b643-7b0473ecf678","html":"<p>The “microservices” architectural strategy has quickly become a mainstay of my application development for many years. While I am comfortable working within more unified codebases when necessary (see, or example, my work converting a large <a href=\"/technologies/meteor\">Meteor app</a>—or plenty of legacy projects where there wasn’t a choice), I tend to prefer smaller, coordinated endpoints, particularly now that it is relatively frictionless to employ reliable service layers for connecting app elements (cluster-internal http, <a href=\"/technologies/rabbitmq\">task queues</a>, etc), and given the wealth of tools for repeatable, descriptive deployments (<a href=\"/technologies/kubernetes\">kubernetes</a>, <a href=\"/technologies/serverless\">severless</a>, <code>terraform</code>). </p>\n<p>In a majority of cases, I have set up my endpoints running <code>express</code> under <a href=\"/technologies/nodejs\">nodejs</a> or  <code>flask</code> (with a wrapping server) under <a href=\"/technologies/python\">python</a>, typically hosted under <a href=\"/technologies/nginx\">nginx</a>. For authentication, I prefer solutions like JWT tokens with a primary token-generating service tied closely to the main ingress, because having as many <em>stateless</em> endpoints as possible is one of the key advantages of this deployment paradigm. </p>\n<p>I have deployed apps using this broad set of patterns for The University of Alabama on projects that see a great deal of traffic and thousands of active authenticated users per semester, as well as for forward-thinking startups where quick iteration and scaling is invaluable. </p>","frontmatter":{"title":"Microservices","tags":["docker","kubernetes","nodejs","python"],"competence":"advanced","parent":null}},"tags":{"nodes":[{"id":"dd72e09d-36d3-57a0-a81d-726c95ba602a","fields":{"slug":"/technologies/docker","tag":"docker"},"frontmatter":{"title":"Docker"}},{"id":"802144d6-be1c-5e8d-a9b3-5cc1c645e074","fields":{"slug":"/technologies/kubernetes","tag":"kubernetes"},"frontmatter":{"title":"Kubernetes"}},{"id":"a09e8c4d-4270-59cc-86dd-694aa938075b","fields":{"slug":"/technologies/nodejs","tag":"nodejs"},"frontmatter":{"title":"Node.js"}},{"id":"46cc03d9-b4a8-5918-ab98-763d457a1e09","fields":{"slug":"/technologies/python","tag":"python"},"frontmatter":{"title":"Python"}}]}},"pageContext":{"tags":["docker","kubernetes","nodejs","python"]}}}