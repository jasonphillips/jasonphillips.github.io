{"componentChunkName":"component---src-templates-technology-tsx","path":"/technologies/rules","result":{"data":{"markdownRemark":{"id":"334aced6-fc24-59d1-8b39-10ea0b1355e2","html":"<p>A niche interest of mine is the composition of rule systems, by which I mean processing pipelines that can take individually composed <em>or</em> graph-composed sets of rules and use them to validate complex logic, assign metadata, or make decisions. I have designed my own rule systems for several projects, usually written to be saved as JSON objects with various query directives supported (e.g., derived Mongo-like parameters like <code>instructor.degrees: {$count: {$gte: 2}}</code>, but extending to more complicated comparisons, with a decision-tree kind of branching to subrules). </p>\n<p>The most significant project for which I worked out a robust rule system was <a href=\"/projects/credentials\">credential mapping for reaccreditation</a>. In that case, the rules could be easily expanded directly by stakeholders willing to write justifications for each one, and the final set fully described a sophisticated logic for relating all teaching areas and degrees.</p>\n<p>In other cases, I have used a similar principle to bring a more logical validation and correction strategy to other areas of often-irregular institutional data, like the full set of circumstances that need to be met in order to cross-list courses. In many of these cases, the prior status quo from administrators on campus took the wildly inefficient approach of long, difficult to debug sql query runs, and I have always advocated for the advantage of clearly auditable rules that can show their sequences of tests and failures per object in the domain. </p>","frontmatter":{"title":"Rule Systems","tags":["nodejs","python"],"competence":null,"parent":null}},"tags":{"nodes":[{"id":"a09e8c4d-4270-59cc-86dd-694aa938075b","fields":{"slug":"/technologies/nodejs","tag":"nodejs"},"frontmatter":{"title":"Node.js"}},{"id":"46cc03d9-b4a8-5918-ab98-763d457a1e09","fields":{"slug":"/technologies/python","tag":"python"},"frontmatter":{"title":"Python"}}]}},"pageContext":{"tags":["nodejs","python"]}}}