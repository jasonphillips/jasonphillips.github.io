{"componentChunkName":"component---src-templates-technology-tsx","path":"/technologies/sas","result":{"data":{"markdownRemark":{"id":"8e988f8c-ef5f-5a84-ab40-2b0e958a96d9","html":"<p>Working in Institutional Research at The University of Alabama necessitated becoming fluent and productive in the language and software package most heavily used by other analysts in our unit, and that happened to be SAS. While I would rarely select SAS for my own purposes if architecting a reporting process from scratch, learning its peculiarities and opinionated style was essential to finding innovative ways to integrate that domain (and the personnel working in that domain) with my own application and web-centric extensions. </p>\n<p>I am well versed in ETL, merging, reshaping, slicing, and descriptive reporting strategies in SAS code, from database integrations to mastering the <code>DATA</code> step’s logic to <code>PROC REPORT</code> and, crucially, <code>PROC TABULATE</code>. The latter—which is essentially just a very convenient iteration on a much older syntax known as TPL or “table-producing language”—is the main hinge by which our office sliced data into deep nested structres with statistical aggregations. A few years ago, I decided to learn from its syntax, revisit the old documents on TPL, and <a href=\"https://github.com/jasonphillips/retabulate/blob/master/packages/retabulate-sas-parser/src/grammar/tabulate.yy\">write my own parser</a> for the <code>TABULATE</code> procedure, so that I could take full statements from others, in their most comfortable language, and transform them into a new domain syntax in <a href=\"/technologies/graphql\">GraphQL</a>, which I can then <a href=\"https://jasonphillips.github.io/retabulate/\">execute and render</a>. I ultimately presented this reverse-engineering project at SAS Global. This stack permits the data execution to occur on either the client or the server with little friction, and has powered many complex dashboards and reporting tools for the university administration, including many datasets from large surveys, among which were all of the student course evaluations.</p>\n<p>An open-source initiative from the SAS Institute to which I have notably contributed is the integration of<a href=\"/technologies/python\">Python</a> and SAS, where I have helped to shape the direction of the library and, unsurprisingly given my interested, authored its <a href=\"https://github.com/sassoftware/saspy/pull/125\">TABULATE implementation</a>. In 2019, I was an invited speaker at SAS Global to lead a longer dedicated session walking through this new direction for their integrations.   </p>\n<p>More recently, I have begun to build new visualization integrations into the SAS Visual Analytics platform for the purposes of our institution. </p>","frontmatter":{"title":"SAS","tags":["python","graphql"],"competence":null,"parent":null}},"tags":{"nodes":[{"id":"7a9da462-1ce0-5f4a-b6d0-3a9bf147171d","fields":{"slug":"/technologies/graphql","tag":"graphql"},"frontmatter":{"title":"GraphQL"}},{"id":"46cc03d9-b4a8-5918-ab98-763d457a1e09","fields":{"slug":"/technologies/python","tag":"python"},"frontmatter":{"title":"Python"}}]}},"pageContext":{"tags":["python","graphql"]}}}